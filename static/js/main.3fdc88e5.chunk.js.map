{"version":3,"sources":["Components/Tracker.jsx","Components/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Tracker","timerName","deleteTimer","useState","moment","duration","asMilliseconds","time","setTime","switchButton","setSwitchButton","stop","useRef","timeFormatRender","tz","subtract","format","useEffect","startTimer","stopButton","current","setInterval","prev","clearInterval","isActive","classNames","className","onClick","xmlns","height","viewBox","width","fill","d","Home","inputName","setInputName","allName","setAllName","obj","propertyName","id","uuidv4","data","addName","onChange","e","target","value","handleName","onKeyUp","code","pressEnter","type","placeholder","enableBackground","map","el","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fdc88e5.chunk.js","sourcesContent":["import React,{ useEffect, useState,useRef} from 'react'\r\nimport moment from 'moment';\r\nimport tz from 'moment-timezone'\r\nimport classNames from 'classnames'\r\n\r\n\r\nfunction Tracker({timerName,deleteTimer}) {\r\n\r\n    const [time,setTime] = useState(moment.duration(0).asMilliseconds());\r\n    const [switchButton,setSwitchButton] = useState(false)\r\n    const stop = useRef(null)\r\n    const timeFormatRender = moment(time).tz('Europe/London').subtract(1,'hours').format('HH:mm:ss')\r\n    \r\n    useEffect(()=> {\r\n        startTimer();\r\n        return stopButton}, [])\r\n        \r\n    \r\n    const startTimer =()=> \r\n        stop.current = setInterval(() => {\r\n            setTime((prev)=> moment.duration(moment.duration(prev).asMilliseconds() + 1000, 'milliseconds').asMilliseconds())\r\n        }, 1000);\r\n            \r\n    const startButton = () =>{\r\n        startTimer();\r\n        setSwitchButton(false);\r\n    }\r\n\r\n    const stopButton = () =>{\r\n    clearInterval(stop.current);\r\n    setSwitchButton(true);\r\n    }\r\n\r\n    const isActive = classNames(\r\n    {'tracker__container__body__inner':switchButton,\r\n     'tracker__container__body__active':!switchButton})\r\n        \r\n\r\nreturn (\r\n        <div className=\"tracker__container__body\">\r\n        <div className={isActive}>\r\n            <div  className=\"tracker__container__body__name\"> {timerName} </div>\r\n            <div className=\"tracker__container__body__time\" >{timeFormatRender}</div> \r\n        </div>\r\n            <div className=\"tracker__container__body__button\">\r\n                {!switchButton \r\n                ?<button className=\"btn\" onClick={stopButton}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"black\" width=\"35px\" height=\"35px\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 14H9V8h2v8zm4 0h-2V8h2v8z\"/></svg></button>\r\n                :<button className=\"btn\" onClick={startButton}><svg xmlns=\"http://www.w3.org/2000/svg\"  height=\"35\" viewBox=\"0 0 24 24\" width=\"35\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/><path d=\"M12,2C6.48,2,2,6.48,2,12c0,5.52,4.48,10,10,10s10-4.48,10-10C22,6.48,17.52,2,12,2z M11,16H9V8h2V16z M12,16V8l5,4L12,16z\"/></g></svg></button>\r\n                }\r\n            <button className=\"btn\" onClick={deleteTimer} ><svg className=\"delete\" xmlns=\"http://www.w3.org/2000/svg\" height=\"35\" viewBox=\"0 0 24 24\" width=\"35\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\"/></svg></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tracker\r\n","import React, {useState} from 'react'\r\nimport moment from 'moment'\r\nimport {v4 as uuidv4} from 'uuid'\r\n\r\nimport Tracker from './Tracker'\r\n\r\n\r\nfunction Home() {\r\n\r\nconst [inputName,setInputName] = useState('');\r\nconst [allName,setAllName] = useState([])\r\n\r\n    \r\nconst obj = {\r\n    propertyName:inputName,\r\n    id:uuidv4(), \r\n};\r\n\r\n\r\nconst data = moment().format('DD.MM.YYYY');\r\n    \r\nconst handleName = (e) =>{\r\n    setInputName(e.target.value)\r\n    };\r\n   \r\n const addName = () =>{\r\n     if(obj.propertyName === ''){\r\n         obj.propertyName = data\r\n     }\r\n    setAllName((prev)=>[obj,...prev])\r\n    setInputName('')\r\n        \r\n    }    \r\n\r\nconst pressEnter = (e)=>{\r\n if(e.code === \"Enter\"){\r\n     addName()\r\n }\r\n}\r\n\r\nconst HandleDeleteTimer = (id) =>{\r\n    setAllName((prev)=> prev.filter(el=> el.id !== id))\r\n}\r\n\r\nreturn (\r\n    <div className=\"tracker__container\">\r\n        <div className=\"tracker__container__header\">\r\n            <h1>Tracker</h1>\r\n            <div className=\"input_wrapper\">\r\n            <input onChange={e=>handleName(e)}  onKeyUp={e=>pressEnter(e)} type='text' value={inputName} placeholder='Enter tracker name'></input>\r\n            <span onClick={addName}  ><svg xmlns=\"http://www.w3.org/2000/svg\" enableBackground=\"new 0 0 24 24\" height=\"40\" viewBox=\"0 0 24 24\" width=\"40\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/><path d=\"M12,2C6.48,2,2,6.48,2,12c0,5.52,4.48,10,10,10s10-4.48,10-10C22,6.48,17.52,2,12,2z M11,16H9V8h2V16z M12,16V8l5,4L12,16z\"/></g></svg></span>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            { allName.map((el)=><Tracker deleteTimer={()=>HandleDeleteTimer(el.id)} timerName={el.propertyName} key={el.id}/>)}\r\n        </div>\r\n        \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import './App.css';\nimport Home from './Components/Home'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport App from './App';\n\nimport './scss/components/tracker.scss'\n\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}